## MAIN TABLE person_tower_days
create table algorithmisation.person_tower_days as select M.caller_msisdn, M.bts_nodeb, count(DISTINCT M.call_date) as tot_days from (select S.caller_msisdn, S.call_date, S.call_time, T.bts_nodeb from algorithmisation.cdr_datas S left join algorithmisation.antennas T on (S.ms_location=T.id_cellule)) M group by M.caller_msisdn, M.bts_nodeb;
create table algorithmisation.person_tower_days as select M.caller_msisdn, M.bts_nodeb, M.latitude, M.longitude, count(DISTINCT M.call_date) as tot_days from (select S.caller_msisdn, S.call_date, S.call_time, T.bts_nodeb, T.longitude, T.latitude from algorithmisation.cdr_datas S left join algorithmisation.antennas T on (S.ms_location=T.id_cellule)) M group by M.caller_msisdn, M.bts_nodeb, M.latitude, M.longitude;

## TEST TABLE person_tower_days_test
create table algorithmisation.person_tower_days_test as select M.caller_msisdn, M.bts_nodeb, count(DISTINCT M.call_date) as tot_days from (select S.caller_msisdn, S.call_date, S.call_time, T.bts_nodeb from algorithmisation.test S left join algorithmisation.antennas_test T on (S.ms_location=T.id_cellule)) M group by M.caller_msisdn, M.bts_nodeb;
create table algorithmisation.person_tower_days_test as select M.caller_msisdn, M.bts_nodeb, M.latitude, M.longitude, count(DISTINCT M.call_date) as tot_days from (select S.caller_msisdn, S.call_date, S.call_time, T.bts_nodeb, T.longitude, T.latitude from algorithmisation.test S left join algorithmisation.antennas_test T on (S.ms_location=T.id_cellule)) M group by M.caller_msisdn, M.bts_nodeb, M.latitude, M.longitude;

# MAIN TABLE person_towers
create table algorithmisation.person_towers as select caller_msisdn, count(DISTINCT bts_nodeb) as total_towers from algorithmisation.person_tower_days group by caller_msisdn;
create table algorithmisation.person_towers as select caller_msisdn, count(DISTINCT bts_nodeb) as total_towers from algorithmisation.person_tower_days group by caller_msisdn;

# MAIN TABLE person_towers_test
create table algorithmisation.person_towers_test as select caller_msisdn, count(DISTINCT bts_nodeb) as total_towers from algorithmisation.person_tower_days_test group by caller_msisdn;
create table algorithmisation.person_towers_test as select caller_msisdn, count(DISTINCT bts_nodeb) as total_towers from algorithmisation.person_tower_days_test group by caller_msisdn;

## MAIN TABLE person_tower_days_final
create table algorithmisation.person_tower_days_final as select R.*, rank() over (partition by R.caller_msisdn order by R.tot_days desc, rand() desc) as rnk from (select S.caller_msisdn, S.bts_nodeb, S.tot_days, M.total_towers from algorithmisation.person_tower_days S left join algorithmisation.person_towers  M  on (S.caller_msisdn=M.caller_msisdn)) R;
create table algorithmisation.person_tower_days_final as select R.*, rank() over (partition by R.caller_msisdn order by R.tot_days desc, rand() desc) as rnk from (select S.caller_msisdn, S.bts_nodeb, S.longitude, S.latitude, S.tot_days, M.total_towers from algorithmisation.person_tower_days S left join algorithmisation.person_towers  M  on (S.caller_msisdn=M.caller_msisdn)) R;

## MAIN TABLE person_tower_days_final_test
create table algorithmisation.person_tower_days_final_test as select R.*, rank() over (partition by R.caller_msisdn order by R.tot_days desc, rand() desc) as rnk from (select S.caller_msisdn, S.bts_nodeb, S.tot_days, M.total_towers from algorithmisation.person_tower_days_test S left join algorithmisation.person_towers_test  M  on (S.caller_msisdn=M.caller_msisdn)) R;
create table algorithmisation.person_tower_days_final_test as select R.*, rank() over (partition by R.caller_msisdn order by R.tot_days desc, rand() desc) as rnk from (select S.caller_msisdn, S.bts_nodeb, S.longitude, S.latitude, S.tot_days, M.total_towers from algorithmisation.person_tower_days_test S left join algorithmisation.person_towers_test  M  on (S.caller_msisdn=M.caller_msisdn)) R;


## MAIN TABLE person_cluster_all
create table algorithmisation.person_cluster_all as select W.*, CASE WHEN(Day_of_Week=6) THEN -1 WHEN(Day_of_Week=7) THEN -1 WHEN(call_time>000000 AND call_time<070000) THEN -1 WHEN(call_time>090000 AND call_time<170000 AND Day_of_Week!=6 AND Day_of_Week!=7) THEN 1 WHEN(call_time>190000) THEN -1 ELSE 0 END AS dummy from (select A.caller_msisdn, A.call_date, A.call_time, A.ms_location, B.cluster_id, B.centroid_lat, B.centroid_long, from_unixtime(unix_timestamp(call_date,'yyyyMMdd'),'u') as Day_of_Week from (select S.caller_msisdn, S.call_date, S.call_time, S.ms_location, T.bts_nodeb from algorithmisation.cdr_datas S left join  algorithmisation.antennas T on (S.ms_location=T.id_cellule)) A left join algorithmisation.cluster  B on (A.bts_nodeb=B.bts_nodeb AND trim(A.caller_msisdn)=trim(B.caller_msisdn))) W;

## MAIN TABLE person_cluster_all_test
create table algorithmisation.person_cluster_all as select W.*, CASE WHEN(Day_of_Week=6) THEN -1 WHEN(Day_of_Week=7) THEN -1 WHEN(call_time>000000 AND call_time<070000) THEN -1 WHEN(call_time>090000 AND call_time<170000 AND Day_of_Week!=6 AND Day_of_Week!=7) THEN 1 WHEN(call_time>190000) THEN -1 ELSE 0 END AS dummy from (select A.caller_msisdn, A.call_date, A.call_time, A.ms_location, B.cluster_id, B.centroid_lat, B.centroid_long, from_unixtime(unix_timestamp(call_date,'yyyyMMdd'),'u') as Day_of_Week from (select S.caller_msisdn, S.call_date, S.call_time, S.ms_location, T.bts_nodeb from algorithmisation.test S left join  algorithmisation.antennas_test T on (S.ms_location=T.id_cellule)) A left join algorithmisation.cluster_test  B on (A.bts_nodeb=B.bts_nodeb AND trim(A.caller_msisdn)=trim(B.caller_msisdn))) W;


## MAIN TABLE person_cluster_days
create table algorithmisation.person_cluster_days as select A.* from( select caller_msisdn, cluster_id, count(DISTINCT call_date) as tot_days from  algorithmisation.person_cluster_all GROUP BY caller_msisdn, cluster_id)A WHERE tot_days>3;

## MAIN TABLE person_cluster_days_test
create table algorithmisation.person_cluster_days_test as select A.* from( select caller_msisdn, cluster_id, count(DISTINCT call_date) as tot_days from  algorithmisation.person_cluster_all_test GROUP BY caller_msisdn, cluster_id)A WHERE tot_days>3;